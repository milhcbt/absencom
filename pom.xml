<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <!--
        Licensed to the Apache Software Foundation (ASF) under one or more
        contributor license agreements.  See the NOTICE file distributed with
        this work for additional information regarding copyright ownership.
        The ASF licenses this file to You under the Apache License, Version 2.0
        (the "License"); you may not use this file except in compliance with
        the License.  You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

        Unless required by applicable law or agreed to in writing, software
        distributed under the License is distributed on an "AS IS" BASIS,
        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        See the License for the specific language governing permissions and
        limitations under the License.
    -->

    <modelVersion>4.0.0</modelVersion>

    <groupId>id.ac.ittelkom</groupId>
    <artifactId>absencom</artifactId>
    <version>0.1.0</version>
    <packaging>bundle</packaging>

    <name>Absen Communication</name>
    <description>bus for absen machine</description>
    
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <camel-version>2.12.3</camel-version><!-- match servicemix version -->
        <activemq-version>5.9.0</activemq-version><!-- match servicemix version -->
        <custom.build.directory>../apache-servicemix-5.0.0/deploy</custom.build.directory>
    </properties>

    <dependencies>

        <!-- Camel Dependencies -->
        <dependency>
            <!-- Core library, 
            camel adalah library untuk ESB dan soa Pattern -->
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-core</artifactId>
            <version>${camel-version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <!-- Library (route) untuk menampilkan text ke console -->
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-stream</artifactId>
            <version>${camel-version}</version>
            <scope>provided</scope>
        </dependency>
        <!-- <dependency> -->
            <!-- jika dibutuhkan data absen bisa disimpan dalam nosql yang 
                 biasanya lebih cepat dari dbms-->
            <!-- 
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-mongodb</artifactId>
            <version>${camel-version}</version>
            <scope>provided</scope>
        </dependency>-->
        <dependency>
            <!-- library socket dari JBOSS yang support async comm
                 jadi lebih cepat -->
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-netty</artifactId>
            <version>${camel-version}</version>
            <scope>provided</scope>
        </dependency>
        <!-- <dependency> -->
            <!-- untuk membuat antrian sehingga 
                 tidak ada pesan/data yang hilang, 
                 pastikan punya Hardisk besar
            -->
            <!-- <groupId>org.apache.camel</groupId>
            <artifactId>camel-jms</artifactId>
            <version>${camel-version}</version>
            <scope>provided</scope>
        </dependency>-->
        
        <dependency>
            <!-- jdbc simpler and faster than JPA,
            untuk penyimpanan yang sederhana, jika complex JPA lebih mudah
            -->
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-jdbc</artifactId>
            <version>${camel-version}</version>
            <scope>provided</scope>
        </dependency>
               
        <!--<dependency>-->
            <!-- Implementasi dari JMS -->
        <!--    <groupId>org.apache.activemq</groupId>
            <artifactId>activemq-camel</artifactId>
            <version>${activemq-version}</version>
            <scope>provided</scope>
        </dependency>-->
        

        <!-- logging -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.7.5</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>1.7.5</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.17</version>
            <scope>provided</scope>
        </dependency>

        <!-- testing -->
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-test-spring</artifactId>
            <version>2.11.1</version>
            <scope>test</scope>
        </dependency>
        
    
        <!-- javax -->
        <dependency>
            <groupId>org.glassfish</groupId>
            <artifactId>javax.json</artifactId>
            <version>1.0.2</version>
            <!--<scope>provided</scope>-->
        </dependency>
        <!-- database driver -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>5.1.26</version>
            <!--<scope>provided</scope>-->
        </dependency>
        <dependency>
            <groupId>commons-dbcp</groupId>
            <artifactId>commons-dbcp</artifactId>
            <version>1.4</version>
            <!--<scope>provided</scope>-->
        </dependency>
        <!-- jstl-->
        
            
    </dependencies>
    

    <build>
        <!--        <outputDirectory>${basedir}/target</outputDirectory>
        <directory>${custom.build.directory}</directory>-->
        <plugins>
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <version>2.3.7</version>
                <extensions>true</extensions>
                <configuration>
                    <instructions>
                        <Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>
                        <Bundle-Version>${project.version}</Bundle-Version>
                        <Include-Resource>
                            mysql-connector-java-5.1.26.jar,commons-dbcp-1.4.jar,javax.json-1.0.2.jar,src/main/resources
                        </Include-Resource>
                        <Bundle-ClassPath>.,mysql-connector-java-5.1.26.jar,commons-dbcp-1.4.jar,javax.json-1.0.2.jar</Bundle-ClassPath>
                    </instructions>
                </configuration>
            </plugin>
                             
            <plugin>
                <!--plugin untuk copy/deploy hasil maven ke 
                folder deploy servicemix -->
                <groupId>com.github.goldin</groupId>
                <artifactId>copy-maven-plugin</artifactId>
                <version>0.2.5</version>
                <executions>
                    <execution>
                        <id>deploy-to-local-directory</id>
                        <phase>install</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <skipIdentical>false</skipIdentical>
                            <failIfNotFound>false</failIfNotFound>
                            <resources>
                                <resource>
                                    <description>Copy artifact to 
                                        another directory</description>
                                    <targetPath>${custom.build.directory}
                                    </targetPath>
                                    <directory>${project.build.directory}
                                    </directory>
                                    <includes>
                                        <include>*.jar</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
          
        </plugins>
    </build>
    <repositories>
        <repository>
            <id>camel-snapshoot</id>
            <url>https://repository.apache.org/content/repositories/snapshots/</url>
        </repository>
    </repositories>
</project>